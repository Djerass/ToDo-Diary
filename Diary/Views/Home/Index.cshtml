@model IEnumerable<ToDo>
    @{
    ViewData["Title"] = "Home Page";
    }

    @if(User.Identity.IsAuthenticated){



    <div class="row">
        <div class="col-3">
            <div class="card">
                <div class="card-body">
                    <h5 class="card-tittle">Choose date</h5>
                    <form method="POST" asp-controller="Home" asp-action="ChooseDate">
                        <div class="form-group">
                            <input name="date" required="" type="text" value="@ViewData[" DateToDo"]" class="form-control"
                                placeholder="Choose day" onfocus="(this.type='date')" />
                        </div>
                        <input type="submit" class="btn btn-primary" value="Show" />
                    </form>
                </div>
            </div>
            <div class="card">
                <div class="card-body">
                    <h5 class="card-title">Click to add task</h5>
                    <a class="btn btn-primary " href="/Home/CreateToDo">Add task</a>
                </div>
            </div>
            <div class="card">
                <div class="card-body">
                    <h5 class="card-title">Display tasks</h5>
                    <h6 class="card-subtitle mb-2 text-muted">All/Not finished</h6>
                    <div class="dropdown form-group">
                        <a class="btn btn-primary dropdown-toggle" href="#" role="button" id="dropdownMenuLink"
                            data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">
                            @if (ViewData["Show"].Equals("All"))
                            {
                            <span>Show all</span>
                            }
                            else
                            {
                            <span>Show only not finished</span>
                            }
                        </a>

                        <div class="dropdown-menu" aria-labelledby="dropdownMenuLink">
                            <a class="dropdown-item" href="/Home/ChangeViewtoAll">Show all</a>
                            <a class="dropdown-item" href="/Home/ChangeViewtoFalse">Show only not finished</a>
                        </div>
                    </div>
                </div>
            </div>
        </div>
        <div class="col-8">
            @if (Model.Any())
            {
            <h2><span class="badge badge-secondary">@ViewData["DateToDo"]</span></h2>
            <table class="table">
                <thead>
                    <tr>
                        <th scope="col">Description</th>
                        <th scope="col">DeadLine</th>
                        <th scope="col">Status</th>
                        <th scope="col">Actions</th>
                    </tr>
                </thead>
                <tbody>
                    @foreach (var item in Model)
                    {
                    <tr>
                        <td>@Html.DisplayFor(modelItem => item.Description)</td>
                        <td>@Html.DisplayFor(modelItem => item.Date)</td>
                        <td>@Html.DisplayFor(modelItem => item.Status)</td>
                        <td>@Html.ActionLink("Change Status", "Change", new {Id = @item.Id}) / @Html.ActionLink("Edit Task", "Edit", new {Id = @item.Id}) / @Html.ActionLink("Delete task", "Delete", new {Id =@item.Id})</td>
                    </tr>
                    }
            </table>
            }
            else
            {
            <h3 class="nothing">Nothing planed yet</h3>
            }
        </div>
    </div>
    }